syntax = "proto3";
package broker;
option go_package = "github.com/Syncano/orion/app/proto/codebox/broker";

import "app/proto/codebox/lb/runner.proto";
import "app/proto/codebox/script/script.proto";

service ScriptRunner {
  // Run runs script in secure environment.
  rpc Run (RunRequest) returns (stream script.RunResponse);
}

// RunRequest represents either a Meta message or a Chunk message. 
// It should always consist of exactly 1 Meta and optionally repeated Chunk messages.
message RunRequest {
  // Meta message specifies fields to describe what is being run. 
  message MetaMessage {
    map<string, string> files = 1; // Map of script file URL->Name.
    string environmentURL = 2; // Environment file URL.
    bytes trace = 3;
    uint64 traceID = 4;
    bool sync = 5;
  }

  MetaMessage meta = 1;  
  lb.RunRequest.MetaMessage lbMeta = 2;
  repeated script.RunRequest request = 3;
}
